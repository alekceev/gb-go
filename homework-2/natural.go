package main

import (
	"fmt"
)

/* 4* Заполнить массив из 100 элементов различными простыми числами. Натуральное число, которое больше единицы, называется простым, если оно делится только на себя и на единицу. Для нахождения всех простых чисел не больше заданного числа n, следуя методу Эратосфена, нужно выполнить следующие шаги:
Выписать подряд все целые числа от двух до n (2, 3, 4, ..., n).
Пусть переменная p изначально равна 2 — первому простому числу.
Зачеркнуть в списке числа от 2p до n, считая шагами по p (это будут числа, кратные p: 2p, 3p, 4p, ...).
Найти первое не зачеркнутое число в списке, превышающее p, и присвоить значению переменной p это число.
Повторять шаги c и d, пока возможно. */

func main() {
	var max int
	fmt.Println("Введите натуралное число:")
	fmt.Scanln(&max)

	fmt.Printf("Простые числа не больше %d: %v\n", max, getNaturalArray(max))
}

func getNaturalArray(max int) []int {

	var arr = getIntArray(max)

	for i := 0; i < len(arr); i++ {
		// проверка след-х элементов
		for j := i + 1; j < len(arr); j++ {
			if arr[j]%arr[i] == 0 {
				// делится без остатка - удаляем (или зануляем)
				delElem(&arr, j)
			}
		}
	}

	return arr
}

// натуральный ряд 2..max
func getIntArray(max int) []int {
	var arr = make([]int, max)

	for i := 2; i <= max; i++ {
		arr[i-2] = i
	}

	return arr
}

// удаляем i-й элемент из среза
func delElem(arr *[]int, i int) {
	*arr = append((*arr)[:i], (*arr)[i+1:]...)
}
